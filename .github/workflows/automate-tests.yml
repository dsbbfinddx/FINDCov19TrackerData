on:
  workflow_dispatch:
  push:
    branches:
      - selenium
  # for now, CRON jobs only run on the default branch of the repo (i.e. usually on master)
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 2 * * *"

name: "Scrape test data and push"

jobs:
  selenium:
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.6" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - name: Install deps
        run: pip3 install --user selenium pytest

      - name: Scrape test data with Selenium
        run: env GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} python selenium/run.py

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          date=$(date +'%Y-%m-%d')
          mv tests-selenium.json automated/selenium/$date-tests-selenium.json
          git add automated/selenium/$date-tests-selenium.json
          git commit -m "update $date-selenium-tests.json"

      - name: Push changes to FINDCov19TrackerData
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: automated/selenium
          branch: ${{ github.ref }}

  fetch-with-r:
    needs: selenium
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      TIC_DEPLOY_KEY: ${{ secrets.TIC_DEPLOY_KEY }}

    steps:
      - uses: actions/checkout@v2.3.1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: "release"
          Ncpus: 4

      # set date/week for use in cache creation
      # https://github.community/t5/GitHub-Actions/How-to-set-and-access-a-Workflow-variable/m-p/42970
      # - cache R packages daily
      - name: "[Cache] Prepare daily timestamp for cache"
        if: runner.os != 'Windows'
        id: date
        run: echo "::set-output name=date::$(date '+%d-%m')"

      - name: "[Cache] Cache R packages"
        if: runner.os != 'Windows'
        uses: pat-s/always-upload-cache@v2.1.0
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}1
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}1

      # for some strange Windows reason this step and the next one need to be decoupled
      - name: "[Stage] Prepare"
        run: |
          Rscript -e "if (!requireNamespace('remotes')) install.packages('remotes', type = 'source')"
          Rscript -e "if (getRversion() < '3.2' && !requireNamespace('curl')) install.packages('curl', type = 'source')"

      - name: "[Custom block] [Linux] Install required libraries"
        run: sudo apt install libcurl4-openssl-dev libgit2-dev libjq-dev libv8-dev libgdal-dev libproj-dev libgeos-dev libudunits2-dev libprotobuf-dev protobuf-compiler

      - name: "[Stage] Install"
        run: |
          sudo add-apt-repository -y ppa:cran/poppler
          sudo apt-get update
          sudo apt-get install -y libpoppler-cpp-dev
          sudo R CMD javareconf
          Rscript -e "remotes::install_github('ropensci/tic')" -e "tic::prepare_all_stages()" -e "tic::before_install()" -e "tic::install()"
          Rscript -e "remotes::install_github('dsbbfinddx/FINDCov19Tracker')"

      - name: "[Stage] Fetch test data with R"
        run: |
          # scrapes tests from R-based countries which are not supported by Selenium
          Rscript -e "data = FINDCov19Tracker::fetch_test_data(); jsonlite::write_json(data, 'tests-R.json', pretty = TRUE)"

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin selenium
          date=$(date +'%Y-%m-%d')
          mv tests-R.json automated/fetch/$date-tests-R.json
          git add automated/fetch/$date-tests-R.json
          git commit -m "update $date-tests-R.json"

      - name: Push changes to FINDCov19TrackerData
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: automated/fetch
          branch: ${{ github.ref }}

  combine-and-deploy:
    needs: fetch-with-r
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest

    env:
      # use GITHUB_TOKEN from GitHub to workaround rate limits in {remotes}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      TIC_DEPLOY_KEY: ${{ secrets.TIC_DEPLOY_KEY }}

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: "release"
          Ncpus: 4

      # set date/week for use in cache creation
      # https://github.community/t5/GitHub-Actions/How-to-set-and-access-a-Workflow-variable/m-p/42970
      # - cache R packages daily
      - name: "[Cache] Prepare daily timestamp for cache"
        if: runner.os != 'Windows'
        id: date
        run: echo "::set-output name=date::$(date '+%d-%m')"

      - name: "[Cache] Cache R packages"
        if: runner.os != 'Windows'
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}1
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}1

      # for some strange Windows reason this step and the next one need to be decoupled
      - name: "[Stage] Prepare"
        run: |
          Rscript -e "if (!requireNamespace('remotes')) install.packages('remotes', type = 'source')"
          Rscript -e "if (getRversion() < '3.2' && !requireNamespace('curl')) install.packages('curl', type = 'source')"

      - name: "[Custom block] [Linux] Install required libraries"
        run: sudo apt install libcurl4-openssl-dev libgit2-dev libjq-dev libv8-dev libgdal-dev libproj-dev libgeos-dev libudunits2-dev libprotobuf-dev protobuf-compiler

      - name: "[Stage] Install"
        run: |
          sudo add-apt-repository -y ppa:cran/poppler
          sudo apt-get update
          sudo apt-get install -y libpoppler-cpp-dev
          sudo R CMD javareconf
          Rscript -e "remotes::install_github('ropensci/tic')" -e "tic::prepare_all_stages()" -e "tic::before_install()" -e "tic::install()"
          Rscript -e "remotes::install_github('dsbbfinddx/FINDCov19Tracker')"

      - name: "[Stage] Combine Selenium and R Test Data"
        run: |
          # collects R-based and Selenium-based countries and writes `automated-tests.json`
          Rscript -e "FINDCov19Tracker::get_daily_test_data()"

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin selenium
          date=$(date +'%Y-%m-%d')
          mv automated-tests.json automated/merged/$date-automated-tests.json
          git add automated/merged/$date-automated-tests-R.json
          git commit -m "update $date--automated-tests-R.json"

      - name: Push changes to FINDCov19TrackerData
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: automated/merged
          branch: ${{ github.ref }}
